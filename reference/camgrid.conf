#May be one of:
#   direct_to_framebuffer => (DEFAULT) Output frames directly to portions of the framebuffer device.  This method is much more efficient and can be updated faster / support more cameras
#   desktop_xfce => Output to cam grid image file and update xfce desktop background to display cam grid image file as frames are updated
CAMGRID_METHOD="direct_to_framebuffer"

#Timeout is in microseconds, so 30,000,000 = 30 seconds
RTSP_TIMEOUT=30000000

CAPTURE_RESOLUTION="640x480"

## List of stream URLs, each of these will be started as a separate streaming thread
declare -a RTSP_STREAM_URLS=(	"rtsp://username:password@192.168.1.100/live"
                "rtsp://username:password@192.168.1.101/live"
                "rtsp://username:password@192.168.1.102/live"
                "rtsp://username:password@192.168.1.103/live"                
                )

## These stream titles will be displayed below each frame in the camgrid, they will also be used for the filenames of the captured stills. (for the desktop background method)
declare -a RTSP_STREAM_TITLES=(	"Stream 1"
                "Stream 2"
                "Stream 3"
                "Stream 4"
                )

## These stream X positions will be used to offset the display location on the screen (for the direct to framebuffer method)
declare -a RTSP_STREAM_XOFFSETS=( 0
                640
                0
                640
                )

## These stream Y positions will be used to offset the display location on the screen (for the direct to framebuffer method)
declare -a RTSP_STREAM_YOFFSETS=( 0
                0
                480
                480
                )

## These stream framerates will individually control the framerate for each stream, to allow prioritization (for the direct to framebuffer method)
declare -a RTSP_STREAM_FPS=( "1/2"
                "1/2"
                "1/15"
                "1/15"
                )


##====desktop_xfce mode options:
CAMGRID_GEOMETRY="+4+4"
CAMGRID_BACKGROUND='#336699'

#For a list of supported formats to experiment with, type "ffmpeg -formats" (not all are image formats, some are video, some are audio... we need an image format)
CAPTURE_FORMAT="tiff"

CAPTURE_LOCATION="/ramdisk"
